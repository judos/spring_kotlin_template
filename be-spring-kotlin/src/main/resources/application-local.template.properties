# connect to local DB
spring.datasource.url=jdbc:mysql://localhost:3306/snakes?allowPublicKeyRetrieval=true&useSSL=false
spring.flyway.url=jdbc:mysql://localhost:3306/snakes?allowPublicKeyRetrieval=true&useSSL=false
spring.flyway.schemas=snakes

# Username and password
spring.datasource.username=snakes
spring.flyway.user=snakes
spring.datasource.password=
spring.flyway.password=

#===============================
# AUTHENTICATION
#===============================

# 100 Characters recommended
#        start|1        0         0         0         0         0         0         0         0         0         0|
app.jwt.secret=

#===============================
# CORS
#===============================

app.cors.urls[0]=http://localhost:4200

#===============================
# Logging
#===============================

# Show generated SQL Statements
#spring.jpa.show-sql=true

# Uncomment to generate sql according to entities for migration:
#spring.jpa.hibernate.ddl-auto=update


# make sure to show blocked logins when e.g. no authorization is available for the user
# logging.level.org.springframework.security.core.userdetails.jdbc=DEBUG
# logging.level.org.flywaydb.core.Flyway=ERROR

# Enable logging transaction management
#logging.level.org.springframework.transaction.interceptor=TRACE

# see: http://logback.qos.ch/manual/layouts.html#conversionWord
# clickable links in console: https://stackoverflow.com/questions/7930844/is-it-possible-to-have-clickable-class-names-in-console-output-in-intellij
logging.pattern.console=%gray(%d{HH:mm:ss}) %highlight(%-5p) %clr(%-15.15logger{15}){gray}.%-35.35(\\(%file:%line\\)) %clr(:){red} %clr(%m){faint}%n
